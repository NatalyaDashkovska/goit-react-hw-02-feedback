{"version":3,"sources":["components/Section/Section.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Notification/Notification.jsx","components/Stastictics/Statistics.jsx","App.js","index.js","components/Section/Section.module.css","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["Section","title","children","className","styles","section","content","FeedbackOptions","options","onLeaveFeedback","map","option","type","onClick","button","Notification","message","Statistics","good","neutral","bad","total","positivePercentage","App","state","props","initialValue","leaveFeedback","event","setState","prevState","target","textContent","this","countTotalFeedback","countPositiveFeedbackPercentage","toFixed","Object","keys","Component","defaultProps","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"0OAceA,EAXC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,0BAASC,UAAWC,IAAOC,QAA3B,UACE,oBAAIF,UAAWC,IAAOH,MAAtB,SAA8BA,IAC9B,qBAAKE,UAAWC,IAAOE,QAAvB,SAAiCJ,Q,gBCgBtBK,EAnBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OAAOD,EAAQE,KAAI,SAAAC,GACjB,OACE,wBACEC,KAAK,SAELC,QAASJ,EACTN,UAAWC,IAAOU,OAJpB,SAMGH,GAJIA,OCEEI,EAPM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,6BAAKA,KCuBCC,EAxBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OAAOD,EACL,gCACE,mDAAYH,KACZ,sDAAeC,KACf,kDAAWC,KACVC,EAAQ,GAAK,qDAAcA,KAC3BC,EAAqB,GACpB,mEAA4BA,EAA5B,UAIJ,cAAC,EAAD,CAAcN,QAAQ,uBCTpBO,E,4MAQJC,MAAQ,CACNN,KAAM,EAAKO,MAAMC,aACjBP,QAAS,EAAKM,MAAMC,aACpBN,IAAK,EAAKK,MAAMC,c,EAElBC,cAAgB,SAAAC,GACd,EAAKC,UAAS,SAAAC,GAAS,sBACpBF,EAAMG,OAAOC,YAAcF,EAAUF,EAAMG,OAAOC,aAAe,O,4CAItE,WAAU,IAAD,EACwBC,KAAKT,MAA5BN,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACjBc,EAAqBd,EAAMD,EAAUD,EACrCiB,GACHjB,EAAOgB,EACR,KACAE,QAAQ,GAEJ5B,EAAU6B,OAAOC,KAAKL,KAAKT,OACjC,OACE,qCACE,cAAC,EAAD,CAASvB,MAAM,6BAAf,SACE,cAAC,EAAD,CACEO,QAASA,EACTC,gBAAiBwB,KAAKN,kBAG1B,cAAC,EAAD,CAAS1B,MAAM,aAAf,SACE,cAAC,EAAD,CACEiB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOa,EACPZ,mBAAoBa,a,GA1CdI,aAAZhB,EACGiB,aAAe,CACpBd,aAAc,GAgDHH,QCnDfkB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,uBAAuB,QAAU,2B,kBCA9FD,EAAOC,QAAU,CAAC,OAAS,mC","file":"static/js/main.a87a6db3.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Section.module.css';\nconst Section = ({ title, children }) => (\n  <section className={styles.section}>\n    <h2 className={styles.title}>{title}</h2>\n    <div className={styles.content}>{children}</div>\n  </section>\n);\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './FeedbackOptions.module.css';\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  return options.map(option => {\n    return (\n      <button\n        type=\"button\"\n        key={option}\n        onClick={onLeaveFeedback}\n        className={styles.button}\n      >\n        {option}\n      </button>\n    );\n  });\n};\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string.isRequired),\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\nexport default FeedbackOptions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Notification = ({ message }) => {\n  return <h2>{message}</h2>;\n};\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import React from 'react';\nimport Notification from '../Notification';\nimport PropTypes from 'prop-types';\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  return total ? (\n    <div>\n      <p>üòÄ Good {good}</p>\n      <p>üòê Neutral {neutral}</p>\n      <p>üôÅ Bad {bad}</p>\n      {total > 0 && <p>üë• Total: {total}</p>}\n      {positivePercentage > 0 && (\n        <div>üëç Positive feedback: {positivePercentage}%</div>\n      )}\n    </div>\n  ) : (\n    <Notification message=\"No feedback given\" />\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.string.isRequired,\n};\n\nexport default Statistics;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Section from './components/Section';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Statistics from './components/Stastictics';\n\nclass App extends Component {\n  static defaultProps = {\n    initialValue: 0,\n  };\n\n  static propTypes = {\n    initialValue: PropTypes.number,\n  };\n  state = {\n    good: this.props.initialValue,\n    neutral: this.props.initialValue,\n    bad: this.props.initialValue,\n  };\n  leaveFeedback = event => {\n    this.setState(prevState => ({\n      [event.target.textContent]: prevState[event.target.textContent] + 1,\n    }));\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const countTotalFeedback = bad + neutral + good;\n    const countPositiveFeedbackPercentage = (\n      (good / countTotalFeedback) *\n      100\n    ).toFixed(0);\n\n    const options = Object.keys(this.state);\n    return (\n      <>\n        <Section title=\"Please leave your feedback\">\n          <FeedbackOptions\n            options={options}\n            onLeaveFeedback={this.leaveFeedback}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={countTotalFeedback}\n            positivePercentage={countPositiveFeedbackPercentage}\n          ></Statistics>\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__2OfMk\",\"title\":\"Section_title__39Mbi\",\"content\":\"Section_content__3UwuB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__bjw7n\"};"],"sourceRoot":""}